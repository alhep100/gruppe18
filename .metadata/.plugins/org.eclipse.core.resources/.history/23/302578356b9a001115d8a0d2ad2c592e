public class Player {
	double x, y = 0;

	int dir = 4;
	boolean alive = true;
	String[] inventar = new String[5];

	public Player(double xdir, double ydir) {

		x = xdir;
		y = ydir;

	}

	// Visuelle ausg

	public void draw(int lastkey) {

		Arena.x = x;

		Arena.y = y;
		if ((lastkey == 1)) {

			StdDraw.picture(x, y, "gif/right.gif");

		}

		if ((lastkey == 0)) {

			StdDraw.picture(x, y, "gif/front.gif");

		}

		if ((lastkey == 3)) {

			StdDraw.picture(x, y, "gif/back.gif");

		}
		if ((lastkey == 4)) {

			StdDraw.picture(x, y, "gif/left.gif");

		}

		if ((lastkey == 6)) {

			if (Arena.bo.x > Arena.w)
				Arena.bo.x = -Arena.w;
			if (Arena.bo.y > Arena.h) {
				Arena.bo.x -= 1;
				Arena.bo.y = -Arena.h;
			}
			;

			Arena.plr.x = Arena.bo.x;
			Arena.plr.y = Arena.bo.y;
			StdDraw.picture(x, y, "gif/front.gif");
			Arena.bo.trig = true;
			Arena.bo.x += 0.1;
			Arena.bo.y += Math.random() * 0.5;
			if (Arena.bo.x >= Arena.w)
				Arena.bo.x *= -1;

		}

		// boolische Multiplikation enspricht dem UND
		if ((Arena.down && Arena.up && Arena.left && Arena.right)) {
			StdDraw.picture(x, y, "gif/star.gif", 30, 30);
			// Joker: Wenn der Benutzer alle Richtunngstasten drückt, steht ihm
			// ein Joker bereit.
			// nach dem Benutzen des Jokers werden die Zugänge versperrt.
			
Arena.gate=1;
		}

		if ((Arena.down) && (!Arena.up)) {

			StdDraw.picture(x, y, "gif/front.gif");
		}

		if ((Arena.right) && (!Arena.left)) {

			StdDraw.picture(x, y, "gif/right.gif");
		}
		if ((Arena.up) && (!Arena.down)) {

			StdDraw.picture(x, y, "gif/back.gif");
		}
		if ((Arena.left) && (!Arena.right)) {

			StdDraw.picture(x, y, "gif/left.gif");
		}

	}

}
